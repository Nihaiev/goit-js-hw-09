{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAGFQ,KAAKC,GACLC,MAAMC,GACNC,SAAQ,W,OAAMC,QAAQC,IAAI,kDAhB/BnB,EAAKoB,iBAAiB,UA2BtB,SAAuBC,GACrBA,EAAMC,iBAON,IALA,IAAIC,EAAaF,EAAMG,cAAcC,SAASpB,MAC1CqB,EAAYL,EAAMG,cAAcC,SAASE,KACzCC,EAASP,EAAMG,cAAcC,SAASG,OACtCC,EAAkBC,OAAOP,EAAWQ,OAE/BC,EAAI,EAAGA,GAAKF,OAAOF,EAAOG,OAAQC,IACzC7B,EAAc6B,EAAGH,GACjBA,GAAmBC,OAAOJ,EAAUK,OAEtC/B,EAAKiC,WApBP,IAAMnB,EAAa,SAAAoB,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAC9B8B,EAAArC,GAASsC,OAAOC,QAAQ,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,QAGlEW,EAAW,SAAAkB,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAC5B8B,EAAArC,GAASsC,OAAOG,QAAQ,sBAAqCD,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitClick);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(logSuccess)\n    .catch(logError)\n    .finally(() => console.log('promise буде виконаний в будь якому випадку'));\n}\n\nconst logSuccess = ({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst logError = ({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction onSubmitClick(event) {\n  event.preventDefault();\n\n  let firstDelay = event.currentTarget.elements.delay;\n  let delayStep = event.currentTarget.elements.step;\n  let amount = event.currentTarget.elements.amount;\n  let firstDelayValue = Number(firstDelay.value);\n\n  for (let i = 1; i <= Number(amount.value); i++) {\n    createPromise(i, firstDelayValue);\n    firstDelayValue += Number(delayStep.value);\n  }\n  form.reset();\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","$ce04d3a99e08e73b$var$logSuccess","catch","$ce04d3a99e08e73b$var$logError","finally","console","log","addEventListener","event","preventDefault","firstDelay","currentTarget","elements","delayStep","step","amount","firstDelayValue","Number","value","i","reset","param","$parcel$interopDefault","Notify","success","concat","failure"],"version":3,"file":"03-promises.fc805ac8.js.map"}